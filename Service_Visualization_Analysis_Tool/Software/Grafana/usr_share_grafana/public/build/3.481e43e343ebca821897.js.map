{"version":3,"sources":["webpack:///3.481e43e343ebca821897.js","webpack:///./public/app/features/admin/admin.ts","webpack:///./public/app/features/admin/admin_list_users_ctrl.ts","webpack:///./public/app/features/admin/adminListOrgsCtrl.js","webpack:///./public/app/features/admin/adminEditOrgCtrl.js","webpack:///./public/app/features/admin/adminEditUserCtrl.js"],"names":["webpackJsonp","794","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","d","AdminStatsCtrl","__WEBPACK_IMPORTED_MODULE_0__admin_list_users_ctrl__","__WEBPACK_IMPORTED_MODULE_1__adminListOrgsCtrl__","__WEBPACK_IMPORTED_MODULE_2__adminEditOrgCtrl__","n","__WEBPACK_IMPORTED_MODULE_3__adminEditUserCtrl__","__WEBPACK_IMPORTED_MODULE_4_app_core_core_module__","AdminSettingsCtrl","$scope","backendSrv","navModelSrv","this","navModel","getAdminNav","get","then","settings","$inject","AdminHomeCtrl","_this","stats","controller","847","AdminListUsersCtrl","pages","perPage","page","showPaging","query","getUsers","prototype","result","users","totalPages","Math","ceil","totalCount","i","push","current","navigateToPage","deleteUser","user","appEvent","title","text","login","icon","yesText","onConfirm","delete","id","848","exports","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","angular","init","getOrgs","orgs","deleteOrg","org","name","text2","apply","call","849","$routeParams","$location","getOrg","getOrgUsers","orgUsers","update","orgDetailsForm","$valid","put","path","updateOrgUser","orgUser","patch","orgId","userId","removeOrgUser","850","_","newOrg","role","permissions","getUser","getUserOrgs","user_id","isGrafanaAdmin","setPassword","passwordForm","payload","password","updatePermissions","create","userForm","post","orgsSearchCache","searchOrgs","queryStr","callback","length","map","addOrgUser","addOrgForm","orgInfo","find","loginOrEmail"],"mappings":"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","file":"3.481e43e343ebca821897.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 794:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AdminStatsCtrl\", function() { return AdminStatsCtrl; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__admin_list_users_ctrl__ = __webpack_require__(847);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adminListOrgsCtrl__ = __webpack_require__(848);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__adminListOrgsCtrl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__adminListOrgsCtrl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__adminEditOrgCtrl__ = __webpack_require__(849);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__adminEditOrgCtrl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__adminEditOrgCtrl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__adminEditUserCtrl__ = __webpack_require__(850);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__adminEditUserCtrl___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__adminEditUserCtrl__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_app_core_core_module__ = __webpack_require__(2);\n\r\n\r\n\r\n\r\n\r\nvar AdminSettingsCtrl = /** @class */ (function () {\r\n    /** @ngInject **/\n    AdminSettingsCtrl.$inject = [\"$scope\", \"backendSrv\", \"navModelSrv\"];\r\n    function AdminSettingsCtrl($scope, backendSrv, navModelSrv) {\r\n        this.navModel = navModelSrv.getAdminNav();\r\n        backendSrv.get('/api/admin/settings').then(function (settings) {\r\n            $scope.settings = settings;\r\n        });\r\n    }\r\n    return AdminSettingsCtrl;\r\n}());\r\nvar AdminHomeCtrl = /** @class */ (function () {\r\n    /** @ngInject **/\n    AdminHomeCtrl.$inject = [\"navModelSrv\"];\r\n    function AdminHomeCtrl(navModelSrv) {\r\n        this.navModel = navModelSrv.getAdminNav();\r\n    }\r\n    return AdminHomeCtrl;\r\n}());\r\nvar AdminStatsCtrl = /** @class */ (function () {\r\n    /** @ngInject */\n    AdminStatsCtrl.$inject = [\"backendSrv\", \"navModelSrv\"];\r\n    function AdminStatsCtrl(backendSrv, navModelSrv) {\r\n        var _this = this;\r\n        this.navModel = navModelSrv.getAdminNav();\r\n        backendSrv.get('/api/admin/stats').then(function (stats) {\r\n            _this.stats = stats;\r\n        });\r\n    }\r\n    return AdminStatsCtrl;\r\n}());\r\n\r\n__WEBPACK_IMPORTED_MODULE_4_app_core_core_module__[\"default\"].controller('AdminSettingsCtrl', AdminSettingsCtrl);\r\n__WEBPACK_IMPORTED_MODULE_4_app_core_core_module__[\"default\"].controller('AdminHomeCtrl', AdminHomeCtrl);\r\n__WEBPACK_IMPORTED_MODULE_4_app_core_core_module__[\"default\"].controller('AdminStatsCtrl', AdminStatsCtrl);\r\n__WEBPACK_IMPORTED_MODULE_4_app_core_core_module__[\"default\"].controller('AdminListUsersCtrl', __WEBPACK_IMPORTED_MODULE_0__admin_list_users_ctrl__[\"a\" /* default */]);\r\n\n\n/***/ }),\n\n/***/ 847:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n///<reference path=\"../../headers/common.d.ts\" />\r\nvar AdminListUsersCtrl = /** @class */ (function () {\r\n    /** @ngInject */\n    AdminListUsersCtrl.$inject = [\"$scope\", \"backendSrv\", \"navModelSrv\"];\r\n    function AdminListUsersCtrl($scope, backendSrv, navModelSrv) {\r\n        this.$scope = $scope;\r\n        this.backendSrv = backendSrv;\r\n        this.pages = [];\r\n        this.perPage = 50;\r\n        this.page = 1;\r\n        this.showPaging = false;\r\n        this.navModel = navModelSrv.getAdminNav();\r\n        this.query = '';\r\n        this.getUsers();\r\n    }\r\n    AdminListUsersCtrl.prototype.getUsers = function () {\r\n        var _this = this;\r\n        this.backendSrv.get(\"/api/users/search?perpage=\" + this.perPage + \"&page=\" + this.page + \"&query=\" + this.query).then(function (result) {\r\n            _this.users = result.users;\r\n            _this.page = result.page;\r\n            _this.perPage = result.perPage;\r\n            _this.totalPages = Math.ceil(result.totalCount / result.perPage);\r\n            _this.showPaging = _this.totalPages > 1;\r\n            _this.pages = [];\r\n            for (var i = 1; i < _this.totalPages + 1; i++) {\r\n                _this.pages.push({ page: i, current: i === _this.page });\r\n            }\r\n        });\r\n    };\r\n    AdminListUsersCtrl.prototype.navigateToPage = function (page) {\r\n        this.page = page.page;\r\n        this.getUsers();\r\n    };\r\n    AdminListUsersCtrl.prototype.deleteUser = function (user) {\r\n        var _this = this;\r\n        this.$scope.appEvent('confirm-modal', {\r\n            title: 'Delete',\r\n            text: 'Do you want to delete ' + user.login + '?',\r\n            icon: 'fa-trash',\r\n            yesText: 'Delete',\r\n            onConfirm: function () {\r\n                _this.backendSrv.delete('/api/admin/users/' + user.id).then(function () {\r\n                    _this.getUsers();\r\n                });\r\n            }\r\n        });\r\n    };\r\n    return AdminListUsersCtrl;\r\n}());\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (AdminListUsersCtrl);\r\n\n\n/***/ }),\n\n/***/ 848:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(8),\n], __WEBPACK_AMD_DEFINE_RESULT__ = function (angular) {\n  'use strict';\n\n  var module = angular.module('grafana.controllers');\n\n  module.controller('AdminListOrgsCtrl', [\"$scope\", \"backendSrv\", \"navModelSrv\", function($scope, backendSrv, navModelSrv) {\n\n    $scope.init = function() {\n      $scope.navModel = navModelSrv.getAdminNav();\n      $scope.getOrgs();\n    };\n\n    $scope.getOrgs = function() {\n      backendSrv.get('/api/orgs').then(function(orgs) {\n        $scope.orgs = orgs;\n      });\n    };\n\n    $scope.deleteOrg = function(org) {\n      $scope.appEvent('confirm-modal', {\n        title: 'Delete',\n        text: 'Do you want to delete organization ' + org.name + '?',\n        text2: 'All dashboards for this organization will be removed!',\n        icon: 'fa-trash',\n        yesText: 'Delete',\n        onConfirm: function() {\n          backendSrv.delete('/api/orgs/' + org.id).then(function() {\n            $scope.getOrgs();\n          });\n        }\n      });\n    };\n\n    $scope.init();\n\n  }]);\n\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(110)(module)))\n\n/***/ }),\n\n/***/ 849:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(8),\n], __WEBPACK_AMD_DEFINE_RESULT__ = function (angular) {\n  'use strict';\n\n  var module = angular.module('grafana.controllers');\n\n  module.controller('AdminEditOrgCtrl', [\"$scope\", \"$routeParams\", \"backendSrv\", \"$location\", \"navModelSrv\", function($scope, $routeParams, backendSrv, $location, navModelSrv) {\n\n    $scope.init = function() {\n      $scope.navModel = navModelSrv.getAdminNav();\n\n      if ($routeParams.id) {\n        $scope.getOrg($routeParams.id);\n        $scope.getOrgUsers($routeParams.id);\n      }\n    };\n\n    $scope.getOrg = function(id) {\n      backendSrv.get('/api/orgs/' + id).then(function(org) {\n        $scope.org = org;\n      });\n    };\n\n    $scope.getOrgUsers = function(id) {\n      backendSrv.get('/api/orgs/' + id + '/users').then(function(orgUsers) {\n        $scope.orgUsers = orgUsers;\n      });\n    };\n\n    $scope.update = function() {\n      if (!$scope.orgDetailsForm.$valid) { return; }\n\n      backendSrv.put('/api/orgs/' + $scope.org.id, $scope.org).then(function() {\n        $location.path('/admin/orgs');\n      });\n    };\n\n    $scope.updateOrgUser= function(orgUser) {\n      backendSrv.patch('/api/orgs/' + orgUser.orgId + '/users/' + orgUser.userId, orgUser);\n    };\n\n    $scope.removeOrgUser = function(orgUser) {\n      backendSrv.delete('/api/orgs/' + orgUser.orgId + '/users/' + orgUser.userId).then(function() {\n        $scope.getOrgUsers($scope.org.id);\n      });\n    };\n\n    $scope.init();\n\n  }]);\n\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(110)(module)))\n\n/***/ }),\n\n/***/ 850:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n  __webpack_require__(8),\n  __webpack_require__(4),\n], __WEBPACK_AMD_DEFINE_RESULT__ = function (angular, _) {\n  'use strict';\n\n  var module = angular.module('grafana.controllers');\n\n  module.controller('AdminEditUserCtrl', [\"$scope\", \"$routeParams\", \"backendSrv\", \"$location\", \"navModelSrv\", function($scope, $routeParams, backendSrv, $location, navModelSrv) {\n    $scope.user = {};\n    $scope.newOrg = { name: '', role: 'Editor' };\n    $scope.permissions = {};\n    $scope.navModel = navModelSrv.getAdminNav();\n\n    $scope.init = function() {\n      if ($routeParams.id) {\n        $scope.getUser($routeParams.id);\n        $scope.getUserOrgs($routeParams.id);\n      }\n    };\n\n    $scope.getUser = function(id) {\n      backendSrv.get('/api/users/' + id).then(function(user) {\n        $scope.user = user;\n        $scope.user_id = id;\n        $scope.permissions.isGrafanaAdmin = user.isGrafanaAdmin;\n      });\n    };\n\n    $scope.setPassword = function () {\n      if (!$scope.passwordForm.$valid) { return; }\n\n      var payload = { password: $scope.password };\n      backendSrv.put('/api/admin/users/' + $scope.user_id + '/password', payload).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.updatePermissions = function() {\n      var payload = $scope.permissions;\n\n      backendSrv.put('/api/admin/users/' + $scope.user_id + '/permissions', payload).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.create = function() {\n      if (!$scope.userForm.$valid) { return; }\n\n      backendSrv.post('/api/admin/users', $scope.user).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.getUserOrgs = function(id) {\n      backendSrv.get('/api/users/' + id + '/orgs').then(function(orgs) {\n        $scope.orgs = orgs;\n      });\n    };\n\n    $scope.update = function() {\n      if (!$scope.userForm.$valid) { return; }\n\n      backendSrv.put('/api/users/' + $scope.user_id, $scope.user).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.updateOrgUser= function(orgUser) {\n      backendSrv.patch('/api/orgs/' + orgUser.orgId + '/users/' + $scope.user_id, orgUser).then(function() {\n      });\n    };\n\n    $scope.removeOrgUser = function(orgUser) {\n      backendSrv.delete('/api/orgs/' + orgUser.orgId + '/users/' + $scope.user_id).then(function() {\n        $scope.getUserOrgs($scope.user_id);\n      });\n    };\n\n    $scope.orgsSearchCache = [];\n\n    $scope.searchOrgs = function(queryStr, callback) {\n      if ($scope.orgsSearchCache.length > 0) {\n        callback(_.map($scope.orgsSearchCache, \"name\"));\n        return;\n      }\n\n      backendSrv.get('/api/orgs', {query: ''}).then(function(result) {\n        $scope.orgsSearchCache = result;\n        callback(_.map(result, \"name\"));\n      });\n    };\n\n    $scope.addOrgUser = function() {\n      if (!$scope.addOrgForm.$valid) { return; }\n\n      var orgInfo = _.find($scope.orgsSearchCache, {name: $scope.newOrg.name});\n      if (!orgInfo) { return; }\n\n      $scope.newOrg.loginOrEmail = $scope.user.login;\n\n      backendSrv.post('/api/orgs/' + orgInfo.id + '/users/', $scope.newOrg).then(function() {\n        $scope.getUserOrgs($scope.user_id);\n      });\n    };\n\n    $scope.init();\n\n  }]);\n}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(110)(module)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 3.481e43e343ebca821897.js","import  AdminListUsersCtrl from './admin_list_users_ctrl';\nimport  './adminListOrgsCtrl';\nimport  './adminEditOrgCtrl';\nimport  './adminEditUserCtrl';\n\nimport coreModule from 'app/core/core_module';\n\nclass AdminSettingsCtrl {\n  navModel: any;\n\n  /** @ngInject **/\n  constructor($scope, backendSrv, navModelSrv) {\n    this.navModel = navModelSrv.getAdminNav();\n\n    backendSrv.get('/api/admin/settings').then(function(settings) {\n      $scope.settings = settings;\n    });\n\n  }\n}\n\nclass AdminHomeCtrl {\n  navModel: any;\n\n  /** @ngInject **/\n  constructor(navModelSrv) {\n    this.navModel = navModelSrv.getAdminNav();\n  }\n}\n\nexport class AdminStatsCtrl {\n  stats: any;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(backendSrv: any, navModelSrv) {\n    this.navModel = navModelSrv.getAdminNav();\n\n    backendSrv.get('/api/admin/stats').then(stats => {\n      this.stats = stats;\n    });\n  }\n}\n\ncoreModule.controller('AdminSettingsCtrl', AdminSettingsCtrl);\ncoreModule.controller('AdminHomeCtrl', AdminHomeCtrl);\ncoreModule.controller('AdminStatsCtrl', AdminStatsCtrl);\ncoreModule.controller('AdminListUsersCtrl', AdminListUsersCtrl);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./public/app/features/admin/admin.ts","///<reference path=\"../../headers/common.d.ts\" />\n\nexport default class AdminListUsersCtrl {\n  users: any;\n  pages = [];\n  perPage = 50;\n  page = 1;\n  totalPages: number;\n  showPaging = false;\n  query: any;\n  navModel: any;\n\n  /** @ngInject */\n  constructor(private $scope, private backendSrv, navModelSrv) {\n    this.navModel = navModelSrv.getAdminNav();\n    this.query = '';\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.backendSrv.get(`/api/users/search?perpage=${this.perPage}&page=${this.page}&query=${this.query}`).then((result) => {\n      this.users = result.users;\n      this.page = result.page;\n      this.perPage = result.perPage;\n      this.totalPages = Math.ceil(result.totalCount / result.perPage);\n      this.showPaging = this.totalPages > 1;\n      this.pages = [];\n\n      for (var i = 1; i < this.totalPages+1; i++) {\n        this.pages.push({ page: i, current: i === this.page});\n      }\n    });\n  }\n\n  navigateToPage(page) {\n    this.page = page.page;\n    this.getUsers();\n  }\n\n  deleteUser(user) {\n    this.$scope.appEvent('confirm-modal', {\n      title: 'Delete',\n      text: 'Do you want to delete ' + user.login + '?',\n      icon: 'fa-trash',\n      yesText: 'Delete',\n      onConfirm: () => {\n        this.backendSrv.delete('/api/admin/users/' + user.id).then(() => {\n          this.getUsers();\n        });\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader??ref--0!./public/app/features/admin/admin_list_users_ctrl.ts","define([\n  'angular',\n],\nfunction (angular) {\n  'use strict';\n\n  var module = angular.module('grafana.controllers');\n\n  module.controller('AdminListOrgsCtrl', function($scope, backendSrv, navModelSrv) {\n\n    $scope.init = function() {\n      $scope.navModel = navModelSrv.getAdminNav();\n      $scope.getOrgs();\n    };\n\n    $scope.getOrgs = function() {\n      backendSrv.get('/api/orgs').then(function(orgs) {\n        $scope.orgs = orgs;\n      });\n    };\n\n    $scope.deleteOrg = function(org) {\n      $scope.appEvent('confirm-modal', {\n        title: 'Delete',\n        text: 'Do you want to delete organization ' + org.name + '?',\n        text2: 'All dashboards for this organization will be removed!',\n        icon: 'fa-trash',\n        yesText: 'Delete',\n        onConfirm: function() {\n          backendSrv.delete('/api/orgs/' + org.id).then(function() {\n            $scope.getOrgs();\n          });\n        }\n      });\n    };\n\n    $scope.init();\n\n  });\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/features/admin/adminListOrgsCtrl.js\n// module id = 848\n// module chunks = 3","define([\n  'angular',\n],\nfunction (angular) {\n  'use strict';\n\n  var module = angular.module('grafana.controllers');\n\n  module.controller('AdminEditOrgCtrl', function($scope, $routeParams, backendSrv, $location, navModelSrv) {\n\n    $scope.init = function() {\n      $scope.navModel = navModelSrv.getAdminNav();\n\n      if ($routeParams.id) {\n        $scope.getOrg($routeParams.id);\n        $scope.getOrgUsers($routeParams.id);\n      }\n    };\n\n    $scope.getOrg = function(id) {\n      backendSrv.get('/api/orgs/' + id).then(function(org) {\n        $scope.org = org;\n      });\n    };\n\n    $scope.getOrgUsers = function(id) {\n      backendSrv.get('/api/orgs/' + id + '/users').then(function(orgUsers) {\n        $scope.orgUsers = orgUsers;\n      });\n    };\n\n    $scope.update = function() {\n      if (!$scope.orgDetailsForm.$valid) { return; }\n\n      backendSrv.put('/api/orgs/' + $scope.org.id, $scope.org).then(function() {\n        $location.path('/admin/orgs');\n      });\n    };\n\n    $scope.updateOrgUser= function(orgUser) {\n      backendSrv.patch('/api/orgs/' + orgUser.orgId + '/users/' + orgUser.userId, orgUser);\n    };\n\n    $scope.removeOrgUser = function(orgUser) {\n      backendSrv.delete('/api/orgs/' + orgUser.orgId + '/users/' + orgUser.userId).then(function() {\n        $scope.getOrgUsers($scope.org.id);\n      });\n    };\n\n    $scope.init();\n\n  });\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/features/admin/adminEditOrgCtrl.js\n// module id = 849\n// module chunks = 3","define([\n  'angular',\n  'lodash',\n],\nfunction (angular, _) {\n  'use strict';\n\n  var module = angular.module('grafana.controllers');\n\n  module.controller('AdminEditUserCtrl', function($scope, $routeParams, backendSrv, $location, navModelSrv) {\n    $scope.user = {};\n    $scope.newOrg = { name: '', role: 'Editor' };\n    $scope.permissions = {};\n    $scope.navModel = navModelSrv.getAdminNav();\n\n    $scope.init = function() {\n      if ($routeParams.id) {\n        $scope.getUser($routeParams.id);\n        $scope.getUserOrgs($routeParams.id);\n      }\n    };\n\n    $scope.getUser = function(id) {\n      backendSrv.get('/api/users/' + id).then(function(user) {\n        $scope.user = user;\n        $scope.user_id = id;\n        $scope.permissions.isGrafanaAdmin = user.isGrafanaAdmin;\n      });\n    };\n\n    $scope.setPassword = function () {\n      if (!$scope.passwordForm.$valid) { return; }\n\n      var payload = { password: $scope.password };\n      backendSrv.put('/api/admin/users/' + $scope.user_id + '/password', payload).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.updatePermissions = function() {\n      var payload = $scope.permissions;\n\n      backendSrv.put('/api/admin/users/' + $scope.user_id + '/permissions', payload).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.create = function() {\n      if (!$scope.userForm.$valid) { return; }\n\n      backendSrv.post('/api/admin/users', $scope.user).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.getUserOrgs = function(id) {\n      backendSrv.get('/api/users/' + id + '/orgs').then(function(orgs) {\n        $scope.orgs = orgs;\n      });\n    };\n\n    $scope.update = function() {\n      if (!$scope.userForm.$valid) { return; }\n\n      backendSrv.put('/api/users/' + $scope.user_id, $scope.user).then(function() {\n        $location.path('/admin/users');\n      });\n    };\n\n    $scope.updateOrgUser= function(orgUser) {\n      backendSrv.patch('/api/orgs/' + orgUser.orgId + '/users/' + $scope.user_id, orgUser).then(function() {\n      });\n    };\n\n    $scope.removeOrgUser = function(orgUser) {\n      backendSrv.delete('/api/orgs/' + orgUser.orgId + '/users/' + $scope.user_id).then(function() {\n        $scope.getUserOrgs($scope.user_id);\n      });\n    };\n\n    $scope.orgsSearchCache = [];\n\n    $scope.searchOrgs = function(queryStr, callback) {\n      if ($scope.orgsSearchCache.length > 0) {\n        callback(_.map($scope.orgsSearchCache, \"name\"));\n        return;\n      }\n\n      backendSrv.get('/api/orgs', {query: ''}).then(function(result) {\n        $scope.orgsSearchCache = result;\n        callback(_.map(result, \"name\"));\n      });\n    };\n\n    $scope.addOrgUser = function() {\n      if (!$scope.addOrgForm.$valid) { return; }\n\n      var orgInfo = _.find($scope.orgsSearchCache, {name: $scope.newOrg.name});\n      if (!orgInfo) { return; }\n\n      $scope.newOrg.loginOrEmail = $scope.user.login;\n\n      backendSrv.post('/api/orgs/' + orgInfo.id + '/users/', $scope.newOrg).then(function() {\n        $scope.getUserOrgs($scope.user_id);\n      });\n    };\n\n    $scope.init();\n\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/features/admin/adminEditUserCtrl.js\n// module id = 850\n// module chunks = 3"],"sourceRoot":""}